// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Course {
  id          String  @id @default(uuid())
  userId      String
  title       String  @db.Text
  description String? @db.Text
  imageUrl    String? @db.Text
  isPublished Boolean @default(false)

  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  researchGroupId String?
  researchGroup   ResearchGroup? @relation(fields: [researchGroupId], references: [id], onDelete: SetNull)

  attachments Attachment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([researchGroupId])
}

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]
}

model Attachment {
  id   String @id @default(uuid())
  name String
  url  String @db.Text

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}

model ResearchGroup {
  id          String  @id @default(uuid())
  name        String  @db.Text
  description String? @db.Text
  imageUrl    String? @db.Text

  courses Course[]
  members ResearchGroupMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResearchGroupMember {
  id     String @id @default(uuid())
  userId String @db.Text
  role   String @default("STUDENT") // rol

  researchGroupId String
  researchGroup   ResearchGroup @relation(fields: [researchGroupId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([userId, researchGroupId])
  @@index([researchGroupId])
}
